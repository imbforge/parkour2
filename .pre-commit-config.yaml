ci:
    autofix_commit_msg: |
        [pre-commit] fixes from hooks
    autofix_prs: true
    autoupdate_branch: 'develop'
    autoupdate_commit_msg: 'pre-commit.ci autoupdate'
    autoupdate_schedule: quarterly
    skip: []
    submodules: false

repos:
-   repo: local
    hooks:
    -   id: set-prod-docker-0
        name: set-prod-docker-0
        entry: /usr/bin/env sed
        language: script
        files: 'Dockerfile'
        args: [-i, '/^#CMD \["gunicorn/s/#CMD/CMD/']
    -   id: set-prod-docker-1
        name: set-prod-docker-1
        entry: /usr/bin/env sed
        language: script
        files: 'Dockerfile'
        args: [-i, '/^RUN .* pip install/s/\(requirements\/\).*\(\.txt\)/\1prod\2/']
    -   id: set-prod-env
        name: set-prod-env
        entry: /usr/bin/env sed
        language: script
        files: 'misc/parkour.env'
        args: [-i, '/^DJANGO_SETTINGS_MODULE/s/\(wui\.settings\.\).*/\1prod/']
    -   id: set-local-url-1
        name: set-local-url-1
        entry: /usr/bin/env sed
        language: script
        files: 'misc/Caddyfile'
        args: [-i, '/^http/s/http\:\/\/.* {/http:\/\/127\.0\.0\.1:9980 {/']
    -   id: set-local-url-2
        name: set-local-url-2
        entry: /usr/bin/env sed
        language: script
        files: 'caddy.yml'
        args: [-i, '/\:\/etc\/caddy\/Caddyfile$/s/\.\/.*\:/\.\/misc\/Caddyfile\:/']
    -   id: set-prod-docker-2
        name: set-prod-docker-2
        entry: /usr/bin/env sed
        language: script
        files: 'Dockerfile'
        args: [-i, '/^CMD \["gunicorn/s/"-t", "[0-9]+"/"-t", "600"/']
    -   id: set-prod-docker-3
        name: set-prod-docker-3
        entry: /usr/bin/env sed
        language: script
        files: 'Dockerfile'
        args: [-i, '/^CMD \["gunicorn/s/"--reload", //']
    -   id: set-prod-docker-compose
        name: set-prod-docker-compose
        entry: /usr/bin/env sed
        language: script
        files: 'docker-compose.yml'
        args: [-E, -i, -e, '/^ +tty/s/: .*/: false/', -e, '/^ +stdin_open/s/: .*/: false/']
    -   id: set-prod-docker-4
        name: set-prod-docker-4
        entry: /usr/bin/env sed
        language: script
        files: 'Dockerfile'
        args: [-i, '/^CMD \["python".*"runserver_plus"/s/CMD/#CMD/']
    #   id: check-migrations
    #   name: Check django migrations
    #   entry: ./parkour_app/manage.py makemigrations --no-input --check --dry-run
    #   language: system
    #     # This will use system's python instead of a new env
    #   types: [python]
    #   pass_filenames: false


# On centos, with py36, this was locked to 4.0.1
# Had to install anaconda3 and adjust INSTALL_PYTHON @ .git/hooks/pre-commit
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
    -   id: trailing-whitespace
        types: [python]
    -   id: end-of-file-fixer
        types: [python]
    -   id: check-added-large-files
        types: [python]
    -   id: check-merge-conflict
        types: [python]

#-   repo: https://github.com/pre-commit/mirrors-mypy
#    rev: 'v0.931'
#    hooks:
#    -   id: mypy

# https://github.com/hadolint/hadolint/blob/master/docs/INTEGRATION.md#pre-commit

-   repo: https://github.com/psf/black
    rev: 22.12.0
    hooks:
    -   id: black
        language_version: python3
        entry: black --target-version=py38  # 3.8

-   repo: https://github.com/asottile/blacken-docs
    rev: v1.12.1
    hooks:
    -   id: blacken-docs
        additional_dependencies: [black==21.4b2]

-   repo: https://github.com/asottile/pyupgrade
    rev: v3.3.1
    hooks:
    -   id: pyupgrade
        args: [--py38-plus]  # 3.8

#-   repo: https://gitlab.com/pycqa/flake8.git
#    rev: 4.0.1
#    hooks:
#    -   id: flake8
#        #additional_dependencies:
#        #  - flake8-black>=0.1.1
#        language_version: python3
#        args: [--max-line-length, "222", --extend-ignore, "E203"]

-   repo: https://github.com/pycqa/doc8
    rev: v1.1.1
    hooks:
    -   id: doc8

-   repo: https://github.com/pre-commit/pygrep-hooks
    rev: v1.9.0
    hooks:
    -   id: python-check-blanket-noqa
    -   id: python-check-mock-methods
    -   id: python-no-eval
    -   id: python-no-log-warn
    -   id: rst-backticks
    -   id: rst-directive-colons

-   repo: https://github.com/adamchainz/django-upgrade
    rev: 1.12.0
    hooks:
    -   id: django-upgrade
        args: [--target-version, "3.2"]

-   repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
    -   id: isort
        args: [--profile, "black"]


## Static(s)
#-   repo: https://github.com/pre-commit/mirrors-prettier
#    rev: v2.6.2
#    hooks:
#    -   id: prettier
#        types_or: [javascript, css]
#-   repo: https://github.com/pre-commit/mirrors-eslint
#    rev: v8.17.0
#    hooks:
#    -   id: eslint
#        files: \.js?$
#        types: [file]
#        args:
#        - --fix
